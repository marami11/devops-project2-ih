name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  TF_WORKING_DIR: ./terraform

jobs:
  build-and-push-frontend:
    name: Build & Push Frontend Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend-app:latest ./frontend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend-app:latest

  build-and-push-backend:
    name: Build & Push Backend Docker Image
    runs-on: ubuntu-latest
    needs: build-and-push-frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/backend-app:latest ./backend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend-app:latest

  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: build-and-push-backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.0

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      - name: Terraform Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -var="sql_admin_user=${{ secrets.SQL_ADMIN_USER }}" -var="sql_admin_password=${{ secrets.SQL_ADMIN_PASSWORD }}" -var="sql_db_name=${{ secrets.SQL_DB_NAME }}" -out=tfplan

      - name: Terraform Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve tfplan